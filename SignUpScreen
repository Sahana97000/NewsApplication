import React, { useState } from 'react';
import {View,TextInput,Text,TouchableOpacity,StyleSheet,Alert,} from 'react-native';
import AsyncStorage from '@react-native-async-storage/async-storage';
import { useNavigation } from '@react-navigation/native';
import { NativeStackNavigationProp } from '@react-navigation/native-stack';
import { RootStackList } from '../App';
type NavigationProp = NativeStackNavigationProp<RootStackList, 'SignUp'>;
const SignUpScreen = () => {
  const navigation = useNavigation<NavigationProp>();
  const [username, setUsername] = useState('');
  const [email, setEmail] = useState('');
  const [password, setPassword] = useState('');
  const [confirmPassword, setConfirmPassword] = useState('');
  const handleSignUp = async () => {
    if (!username || !email || !password || !confirmPassword) {
      Alert.alert('All fields are required.');
      return;
    }
    if (password !== confirmPassword) {
      Alert.alert('Passwords do not match.');
      return;
    }
    const existingUser = await AsyncStorage.getItem('user');
    if (existingUser) {
      const parsedUser = JSON.parse(existingUser);
      if (
        parsedUser.email === email ||
        parsedUser.username.toLowerCase() === username.toLowerCase()
      ) {
        Alert.alert('User already exists with this email or username.');
        return;
      }
    }
    const newUser = { username, email, password };
    await AsyncStorage.setItem('user', JSON.stringify(newUser));
    Alert.alert('Registration successful!');
    navigation.navigate('Login');
  };
  return (
    <View style={styles.container}>
      <Text style={styles.title}>Sign Up</Text>
      <TextInput
        placeholder="Username"
        value={username}
        onChangeText={setUsername}
        style={styles.input}
      />
      <TextInput
        placeholder="Email"
        value={email}
        onChangeText={setEmail}
        style={styles.input}
        keyboardType="email-address"
      />
      <TextInput
        placeholder="Password"
        value={password}
        onChangeText={setPassword}
        style={styles.input}
        secureTextEntry
      />
      <TextInput
        placeholder="Confirm Password"
        value={confirmPassword}
        onChangeText={setConfirmPassword}
        style={styles.input}
        secureTextEntry
      />
      <TouchableOpacity style={styles.button} onPress={handleSignUp}>
        <Text style={styles.buttonText}>Register</Text>
      </TouchableOpacity>
    </View>
  );
};
export default SignUpScreen;
const styles = StyleSheet.create({
  container: { flex: 1, justifyContent: 'center', paddingHorizontal: 20 },
  title: {
    fontSize: 28,
    fontWeight: 'bold',
    textAlign: 'center',
    marginBottom: 40,
  },
  input: {
    height: 50,
    borderColor: '#aaa',
    borderWidth: 1,
    marginBottom: 15,
    borderRadius: 8,
    paddingHorizontal: 10,
  },
  button: {
    backgroundColor: '#6200EE',
    padding: 15,
    borderRadius: 8,
  },
  buttonText: { color: '#fff', fontSize: 18, textAlign: 'center' },
});
